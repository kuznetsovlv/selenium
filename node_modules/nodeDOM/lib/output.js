(function () {
	"use strict";

	var CONSTANTS = require('./constants.js');
	var fs = require('fs');

	var FLOWS = Object.defineProperties({}, {
		'STDIN': {value: 0, writable: false, enumerable: true, configurable: false},
		'STDOUT': {value: 1, writable: false, enumerable: true, configurable: false},
		'STDERR': {value: 2, writable: false, enumerable: true, configurable: false}
	});

	Object.defineProperty(CONSTANTS, 'FLOWS', {value: FLOWS, writable: false, enumerable: true, configurable: false})

	function Output (path, encoding) {
		this.setPath(path);
		this.encoding = encoding || 'utf8';
	}

	Object.defineProperties(Output.prototype, {
		'printLine': {
			value: function (str) {
				if (str.substr(-1) !== '\n')
					str += '\n';
				var buffer = new Buffer(str, this.encoding || 'utf8');
				return fs.writeSync(this.fd, buffer, 0, str.length);
			},
			writable: false,
			enumerable: true,
			configurable: false
		},
		'setPath': {
			value: function (path) {
				this.path = path ? (path === CONSTANTS.FLOWS.STDOUT ? 'stdOut' : path) : 'stdOut';
				if (this.path !== 'stdOut' && fs.existsSync(path))
					fs.unlinkSync(path);
				this.fd = this.path !== 'stdOut' ? fs.openSync(path, 'a') : 1;
				return this;
			},
			writable: false,
			enumerable: true,
			configurable: false
		},
		'setEncoding': {
			value: function (encoding) {
				this.encoding = encoding || 'utf8';
			},
			writable: false,
			enumerable: true,
			configurable: false
		}
	});

	module.exports = Output;

})()