(function () {
	"use strict";
	var reg = /^data\-\w+$/;
	function DataSet (element) {
		var attrs = element.attributes,
		    self = this;
		for (var key in attrs)
			if (reg.test(key))
				(function () {
					var k = key;
					Object.defineProperty(self, k.split('-')[1], {
						get: function () {return attrs[k] ? attrs[k].value : undefined;},
						set: function (v) {attrs.set(k, v);},
						enumerable: true,
						configurable: true
					});
				})();
		Object.defineProperties(this, {
			'add': {
				value: function (name, value) {
					attrs.set(['data', name].join('-'), value);
					Object.defineProperty(this, name, {
						get: function () {return attrs[k].value;},
						set: function (v) {attrs.set(k, v);},
						enumerable: true,
						configurable: true
					});
				},
				writable: false,
				enumerable: false,
				configurable: false
			},
			'remove': {
				value: function (name) {
					attrs.remove(['data', name].join('-'));
					delete this[name];
				},
				writable: false,
				enumerable: false,
				configurable: false
			},
			'update': {
				value: function () {
					element.dataset = this;
				}
			}

		});
	}

	

	module.exports = DataSet;
})()